generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Barbershop {
  id             String              @id @default(uuid())
  name           String
  hoursAvailable String[]            @default(["09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00"])
  address        String
  phones         String[]
  description    String
  imageUrl       String
  createdAt      DateTime            @default(now())
  updatedAt      DateTime            @updatedAt
  services       BarbershopService[]
  bookings       Booking[]

  Review Review[]
}

model BarbershopService {
  id           String     @id @default(uuid())
  name         String
  description  String
  imageUrl     String
  price        Decimal    @db.Decimal(10, 2)
  barbershopId String
  barbershop   Barbershop @relation(fields: [barbershopId], references: [id])
  bookings     Booking[]
}

enum Status {
  CONFIRMED
  CANCELED
  COMPLETED
}

model Booking {
  id           String            @id @default(uuid())
  userId       String
  serviceId    String
  barbershopId String
  barber       Barbershop        @relation(fields: [barbershopId], references: [id])
  service      BarbershopService @relation(fields: [serviceId], references: [id])
  date         DateTime
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  status       Status            @default(CONFIRMED)
  rating       Int?

  @@unique([serviceId, date, barbershopId])
}

model Review {
  id           String     @id @default(uuid())
  userId       String
  barbershopId String
  barbershop   Barbershop @relation(fields: [barbershopId], references: [id])
  rating       Int
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}
